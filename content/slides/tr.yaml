levels:
    0:
        1:
            header: Hedy'ye hoş geldin!
            text: Hedy bir programlama dilidir.
        2:
            header: Programlama
            text: |-
                Programlama, bilgisayarın dilini kullanarak, bir bilgisayara talimatlar vermektir.

                Böyle bir dile "programlama dili" denir.
        3:
            header: Programlama Dili
            text: |-
                Belki bazı programlama dillerini zaten biliyorsunuzdur?
                Bazı örnekler şunlardır:
                * Scratch
                * Python
                * HTML
        4:
            header: Programlama
            text: |-
                Eğer programlama yapabiliyorsanız, pek çok harika şey yapabilirsiniz:
                * Etkileşimli hikayeler oluşturabilirsiniz
                * Bilgisayar çizimleri oluşturup ve bunları kağıt veya kumaş üzerine çizebilirsiniz
                * Telefonunuzda kullanmak için kendi uygulamalarınızı oluşturabilirsiniz
        5:
            header: Hedy'de Programlama
            text: |-
                Hedy'de `{print}` gibi özel kodlar kullanırız.
                <iframe class="embedded-hedy" src="/adventure/story/1/raw"></iframe>
        6:
            header: Hedy'de Programlama
            text: |-
                Kod kelimeleri pembe renkte gösterilecektir.
                <iframe class="embedded-hedy" src="/adventure/story/1/raw"></iframe>
        7:
            header: Hedy'de Programlama
            text: |-
                Kodun altındaki Kodu çalıştır düğmesi ile kodu başlatıyoruz.
                <iframe class="embedded-hedy" src="/adventure/story/1/raw"></iframe>
        8:
            header: Hedy'de Programlama
            text: |-
                Çıktısı sağ tarafta görünür.
                <iframe class="embedded-hedy" src="/adventure/story/1/raw"></iframe>
        9:
            header: Hedy'de Programlama
            text: |-
                Çıktı bir çizim de olabilir.
                <iframe class="embedded-hedy" src="/adventure/turtle/1/raw"></iframe>
    1:
        1:
            header: 1. seviyeye hoş geldiniz!
            text: |-
                1. seviyede, Hedy'de hikayeler oluşturarak başlayacağız!

                Etkileşimli hikayeler oluşturmak için üç metin koduna ihtiyacımız var.
        2:
            header: '{print}'
            text: |-
                Seviye 1'de kullanabileceğiniz ilk kod `{print}`.

                `{print}` ekranda metin göstermek için kullanılır.
            editor: <iframe class="fragment" src="/adventure/print_command/1/raw"></iframe>
        3:
            header: '{print} komutu'
            text: |-
                Yazdır komutundan sonraki metni istediğiniz şekilde değiştirebilirsiniz.

                Ya da `{print}` ile başlayan başka bir kod satırı ekleyerek birden fazla satır yazdırabilirsiniz.
            editor: <iframe class="fragment" src="/adventure/print_command/1/raw"></iframe>
        4:
            header: '{ask}'
            text: |-
                Seviye 1`de kullanabileceğiniz ikinci kod `{ask}`.

                `{ask}` cevaplanabilecek bir soru sormak için kullanılır.
            editor: <iframe class="fragment" src="/adventure/rock/1/raw"></iframe>
        5:
            header: '{echo}'
            text: |-
                Önceki örnekte görebileceğiniz gibi, eğer `{ask}` komutunu kullanırsanız, bir soru sorabilirsiniz.

                Ancak cevap çıktı ekranında gösterilmez.

                Eğer cevabın gösterilmesini istiyorsanız, bu seviyenin son komutunu kullanabilirsiniz: `{echo}`.

                `{echo}` bir `{ask}` cevabını tekrarlamak için kullanılır.
            editor: <iframe class="fragment" src="/adventure/ask_command/1/raw"></iframe>
        6:
            header: Programlama!
            text: |-
                `{print}`, `{ask}` ve `{echo}` ile artık küçük bir hikaye oluşturabilirsiniz.
                Papağan, Masal, ve Taş, Kağıt, Makas maceralarını denemek için iyi bir zaman.
        7:
            header: Programlama!
            text: Maceralar, sekmeler halinde gösterilir.
            editor: <iframe class="fragment" src="/hedy/1"></iframe>
        8:
            header: Programlama!
            text: |-
                Sarı ok düğmeleri örnekleri kopyalamak için kullanılabilir.
                <iframe class="fragment" src="/hedy/1"></iframe>
        9:
            header: Kaplumbağa ile çizim yapmak
            text: Metin ile kodlamayı gördüğümüze göre, şimdi çizim kodlarına bakacağız.
        10:
            header: 'Kaplumbağa ile çizim yapmak: {forward}'
            text: '`{forward}` kaplumbağayı ileri hareket ettirmek için kullanılır.'
            editor: <iframe class="fragment" src="/adventure/turtle/1/raw"></iframe>
        11:
            header: 'Kaplumbağa ile çizim yapmak: {turn}'
            text: '`{turn}` kaplumbağanın sola veya sağa dönmesini sağlamak için kullanılır.'
            editor: <iframe class="fragment" src="/adventure/turtle/1/raw"></iframe>
    2:
        1:
            header: Seviye 2'ye hoş geldiniz
            text: |-
                Bu seviyede değişkenleri kullanmayı öğreneceksiniz.

                Değişken, bilgi depolamak için kullanılabilen bir kelimedir.

                Örneğin: bir isim, yaş veya tutulan spor takımı.
        2:
            header: Değişkenler
            text: Bir değişken oluşturmak veya 'ayarlamak' için `{is}` komutunu kullanırız
            editor: <iframe class="fragment" src="/adventure/is_command/2/raw"></iframe>
        3:
            header: Etkileşimli
            text: |-
                Soru sorarak da bir değişken belirleyebiliriz.

                Sorunun yanıtı değişkende saklanır.

                Bu şekilde `{echo}` komutuna ihtiyaç duymayız.
            editor: <iframe class="fragment" src="/adventure/ask_command/2/raw"></iframe>
        4:
            header: Çoklu değişkenler
            text: Artık değişkenleri kullandığımıza göre, tek bir `{echo}` komutu yerine birden fazla değişken kullanabiliriz.
            editor: <iframe class="fragment" src="/adventure/ask_command/2/raw"></iframe>
        5:
            header: Uyku
            text: Kodu bir süreliğine duraklatmak için `{sleep}` komutunu da kullanabilirsiniz.
            editor: <iframe class="fragment" src="/adventure/sleep_command/2/raw"></iframe>
        6:
            header: Uyku 5
            text: |-
                Duraklamanın daha uzun olmasını istiyorsanız `{sleep}` komutundan sonra bir sayı ekleyebilirsiniz.

                İsterseniz, uyku komutunun süresine karar vermek için bir sayı yerine bir değişken bile kullanabilirsiniz.
            editor: <iframe class="fragment" src="/adventure/sleep_command/2/raw"></iframe>
        7:
            header: Programlama eğlencesi başlasın!
            text: Seviye 2'deki maceraların tadını çıkarın!
    3:
        1:
            header: Seviye 3'e hoş geldiniz
            text: Bu seviyede nasıl liste yapacağınızı, listenize öğe ekleyip çıkaracağınızı ve listeden rastgele bir öğe seçeceğinizi öğreneceksiniz.
        2:
            header: Bir liste yapmak
            text: |-
                Bir listeyi `{is}` ile yaparsınız.

                Listenizdeki öğeleri virgülle ayırın.
            editor: <iframe class="fragment" src="/adventure/random_command/3/raw"></iframe>
        3:
            header: Rastgele
            text: |-
                Listeyi `{at}` `{random}` komutu ile kullanabilirsiniz.
                Bilgisayar listeden rastgele bir öğe seçecektir.
                Bu kodu her çalıştırdığınızda çıktı farklı olacaktır.
            editor: <iframe class="fragment" src="/adventure/dice/3/raw"></iframe>
        4:
            header: Cümle içinden rastgele
            text: Bir cümle için de `{at}` `{random}` komutunu kullanabilirsiniz.
            editor: <iframe class="fragment" src="/adventure/random_command/3/raw"></iframe>
        5:
            header: Eklemek için
            text: |-
                Listeye `{add}` `{to}` komutu ile öğe ekleyebilirsiniz.

                Listeye neyin ekleneceğini seçebilir veya `{add}` `{to}` komutunu `{ask}` komutuyla birlikte kullanabilirsiniz.
                Bu şekilde, listeye ne ekleneceğine oyuncunun karar vermesine izin verebilirsiniz.
            editor: <iframe class="fragment" src="/adventure/add_remove_command/3/raw"></iframe>
        6:
            header: İçinden kaldırmak
            text: |-
                `{add}` `{to}` komutunun tersi `{remove}` `{from}` komutudur.
                Bu komut listeden bir öğeyi kaldırır.
            editor: <iframe class="fragment" src="/adventure/add_remove_command/3/raw"></iframe>
        9:
            header: Hadi işe koyulalım!
            text: Seviye 3'teki maceraların tadını çıkarın!
    4:
        1:
            header: 4. seviyeye hoş geldiniz
            text: Bu seviyede tırnak işaretlerini nasıl kullanacağınızı öğreneceksiniz.
            editor: <iframe class="fragment" src="/adventure/quotation_marks/4/raw"></iframe>
        2:
            header: Problem
            text: 'Önceki seviyelerde, bu sorunla karşılaşmış olabilirsiniz:'
            editor: <iframe class="fragment" src="/adventure/default/4/raw"></iframe>
        3:
            header: Bunu tırnak işaretleri ile düzeltmek
            text: |-
                Bu seviyede tırnak işaretlerini kullanarak bu sorunu çözeceğiz.

                Bu aynı zamanda kodumuzun 'gerçek' Python koduna daha çok benzemesini sağlar.
        4:
            header: Yazdır ile tırnak işaretleri
            text: '`{print}` komutunu her kullandığınızda, ekranda görünmesini istediğiniz metni tırnak içine almanız gerekir.'
            editor: <iframe class="fragment" src="/adventure/quotation_marks/4/raw"></iframe>
        5:
            header: Sor ile tırnak işaretleri
            text: Bu aynı zamanda `{ask}` komutu için de geçerlidir.
            editor: <iframe class="fragment" src="/adventure/quotation_marks/4/raw"></iframe>
        6:
            header: Tırnak işaretleri ve değişkenler
            text: |-
                Değişken adlarının ekrana yazdırılmasını istemezsiniz.
                Bu nedenle değişkenler tırnak işaretlerinin dışında bırakılmalıdır, bunun gibi:
            editor: <iframe class="fragment" src="/adventure/quotation_marks/4/raw"></iframe>
        7:
            header: Tırnak işaretleri ve değişkenler
            text: |-
                Değişken adları bir cümlenin ortasında kullanıldığında, değişkenleri tırnak işaretlerinin dışında bırakmanız gerekir.
                Ancak cümlenin geri kalanında tırnak işaretlerine ihtiyaç vardır. Bu şuna benziyor:
            editor: <iframe class="fragment" src="/adventure/quotation_marks/4/raw"></iframe>
        8:
            header: Tırnak işaretleri ve kısaltmalar
            text: |-
                Dikkatli olun! Artık tırnak işareti kullandığınıza göre, kısaltmalarda ve özel isimlerde kesme işareti kullanamazsınız.

                Lütfen aşağıdaki ekranda "Hedy'nin" veya "TC'de" gibi bir özel isim veya kısaltma yazdırmayı deneyin ve ne olduğunu görün...
            editor: <iframe class="fragment" src="/adventure/rock/4/raw"></iframe>
        9:
            header: Temizle
            text: |-
                Bu seviyede {clear} komutunu da öğreneceksiniz.
                Bu komut ile çıktı ekranınızdaki tüm metni silebilirsiniz.

                Her zaman uyku komutu kullanmaya da dikkat edin. Eğer bunu yapmazsanız bilgisayar siz okuyamadan tüm metni silecektir!
            editor: <iframe class="fragment" src="/adventure/clear_command/4/raw"></iframe>
        10:
            header: Hazır Ol, Ayarla, Başla!
            text: Seviye 4'teki maceraların tadını çıkarın!
    5:
        1:
            header: Seviye 5'e hoş geldiniz
            text: 'Bu seviyede 3 yeni komutu kullanmayı öğreneceksiniz: `{if}`, `{else}` ve `{in}`.'
        2:
            header: eğer
            text: |-
                `{if}` komutu iki seçenek arasında seçim yapmanızı sağlar.
                Bu örnekte, verilen cevap Hedy ise bilgisayar 'güzel' yazdıracaktır.
                Eğer cevap Hedy değilse, bilgisayar hiçbir şey yapmayacaktır.
            editor: <iframe class="fragment" src="/adventure/if_command/5/raw"></iframe>
        3:
            header: Yazdırmayı unutmayın
            text: '`{if}` komutunu kullanırken, `{print}` komutunu kullanmayı unutmayın.'
            editor: <iframe class="fragment" src="/adventure/if_command/5/raw"></iframe>
        4:
            header: değilse
            text: |-
                Bir `{if}` komutu kullanırken, bir `{else}` komutu da ekleyebilirsiniz.
                Eğer cevap Hedy ise, bilgisayar 'güzel' yazacaktır.
                Ancak cevap başka bir şeyse bilgisayar 'böö' yazacaktır.
            editor: <iframe class="fragment" src="/adventure/if_command/5/raw"></iframe>
        5:
            header: Uzun satırlar
            text: |-
                Hem `{if}` hem de `{else}` komutuna sahip olduğunuzda satırlarınızın çok uzun olabileceğini fark etmiş olabilirsiniz.

                Komutları ayırmayı ve aşağıdaki gibi 2 satıra koymayı seçebilirsiniz:
            editor: <iframe class="fragment" src="/adventure/if_command/5/raw"></iframe>
        6:
            header: Bir başka yeni komut
            text: |-
                Eğer `{if}` ve `{else}` komutları ile pratik yaptıysanız, `{in}` komutunu da deneyebilirsiniz.

                Örneğin `{in}` ile bilgisayarın bir öğenin bir listede olup olmadığını kontrol etmesini sağlayabilirsiniz:

                Hedy'nin büyük/küçük harfe duyarlı olduğunu lütfen unutmayın. Bu, "yeşil" yerine "Yeşil" yanıtını verirseniz, Hedy'nin "eh işte" yazdıracağı anlamına gelir.
            editor: <iframe class="fragment" src="/adventure/in_command/5/raw"></iframe>
        7:
            header: Hadi başlayalım!
            text: Seviye 5'teki maceraların tadını çıkarın!
    6:
        1:
            header: Seviye 6'ya hoş geldiniz
            text: Bu seviyede kodlarımıza matematiği de ekliyoruz.
        2:
            header: Toplama
            text: Bir toplama işlemini hesaplamak istiyorsanız, artı işaretini kullanmanız yeterlidir.
            editor: <iframe class="fragment" src="/adventure/maths/6/raw"></iframe>
        3:
            header: Çıkarma
            text: Çıkarma işlemi yapmak istiyorsanız, eksi işaretini kullanabilirsiniz.
            editor: <iframe class="fragment" src="/adventure/maths/6/raw"></iframe>
        4:
            header: Çarpma
            text: Eğer çarpma işlemi yapmak istiyorsanız, yıldız işaretini kullanabilirsiniz.
            editor: <iframe class="fragment" src="/adventure/maths/6/raw"></iframe>
        5:
            header: Bölme
            text: Bölme işlemi için sağa eğik çizgiyi kullanabilirsiniz.
            editor: <iframe class="fragment" src="/adventure/maths/6/raw"></iframe>
        6:
            header: Özet
            text: Özetle, matematik yapmak için +, -, * ve / işaretlerini kullanabilirsiniz.
            editor: <iframe class="fragment" src="/adventure/maths/6/raw"></iframe>
        7:
            header: = sembolü
            text: |-
                Şu andan itibaren `{is}` komutu yerine = sembolünü de kullanabilirsiniz.
                Bu hem sayılar hem de kelimeler için geçerlidir ve ayrıca `{if}` veya `{else}` komutlarından sonra gelir.
            editor: <iframe class="fragment" src="/adventure/is_command/6/raw"></iframe>
        8:
            header: Değişkenlerle hesaplamalar yapmak
            text: 'Hesaplamaları sayılarla yapabilirsiniz, ancak hesaplama yapmak için değişkenleri de kullanabilirsiniz, bunun gibi:'
            editor: <iframe class="fragment" src="/adventure/calculator/6/raw"></iframe>
        9:
            header: Hadi işe koyulalım!
            text: Seviye 6'daki maceraların tadını çıkarın!
    7:
        1:
            header: Seviye 7'ye hoş geldiniz
            text: Bu seviyede bir kod satırını istediğiniz kadar tekrarlamayı öğreneceksiniz.
        2:
            header: tekrar 3 kere
            text: |-
                Bir kod satırını tekrarlamak istiyorsanız, `{repeat}` 3 `{times}` kodunu kullanabilirsiniz.
                Satırı daha fazla kez tekrarlamak istiyorsanız, sadece sayıyı değiştirin.

                Örneğin: Karakterinizin 5 kez yardım için bağırdığı bir hikaye programlıyorsanız, bu şöyle görünebilir:
            editor: <iframe class="fragment" src="/adventure/story/7/raw"></iframe>
        3:
            header: Yazdır komutunu unutmayın
            text: tekrar komutunu kullanırken `{print}` komutunu unutmayın.
            editor: <iframe class="fragment" src="/adventure/print/7/raw"></iframe>
        4:
            header: Bir sor komutunu tekrarlayın
            text: Ayrıca bir `{ask}`, `{if}` veya `{else}` komutunu birden çok kez tekrarlayabilirsiniz.
            editor: <iframe class="fragment" src="/adventure/repeat_command_2/7/raw"></iframe>
        5:
            header: Hazır ol Ayarla Başla!
            text: Seviye 7'deki maceraların tadını çıkarın!
    8:
        1:
            header: Seviye 8'e hoş geldiniz
            text: Bu seviyede `{repeat}`, `{if}` ve `{else}` komutlarının birden fazla kod satırında çalışmasını sağlamak için girinti kullanmayı öğreneceksiniz.
        2:
            header: önceki {repeat} komutları
            text: |-
                Önceki seviyelerde, `{repeat}` komutu aşağıdaki gibi görünüyordu:

                Yalnızca bir satır kodu tekrarlayabilirsiniz.
            editor: <iframe class="fragment" src="/adventure/story/7/raw"></iframe>
        3:
            header: şimdiki {repeat} komutları
            text: |-
                Bu seviyede birden fazla kod satırını tekrarlayabilirsiniz. Bunu yapmak için bilgisayara hangi satırların birbirine ait olduğunu ve tekrarlanması gerektiğini söylemelisiniz.
                Bunu girinti kullanarak yaparsınız.

                Tekrarlamak istediğiniz her satırın başında aşağıdaki gibi 4 boşluk (veya bir sekme) kullanın:
            editor: <iframe class="fragment" src="/adventure/repeat_command/8/raw"></iframe>
        4:
            header: şimdiki {repeat} komutları
            text: |-
                İsterseniz `{repeat}` komutundan sonra girinti yapmadan devam edebilirsiniz.
                Girinti ile başlamayan satırlar tekrarlanmayacaktır.
            editor: <iframe class="fragment" src="/adventure/repeat_command_2/8/raw"></iframe>
        5:
            header: önceki eğer ve değilse
            text: |-
                Aynı şey `{if}` ve `{else}` komutları için de geçerlidir.
                Bunlar daha önceki komutlardı:
            editor: <iframe class="fragment" src="/adventure/if_command/5/raw"></iframe>
        6:
            header: şimdiki eğer ve değilse
            text: |-
                Bunlar şimdiki `{if}` ve `{else}` komutlarıdır.
                `{if}` ve `{else}` komutlarından sonraki her satır girinti ile başlar.
            editor: <iframe class="fragment" src="/adventure/if_command/8/raw"></iframe>
        7:
            header: girintiyi durdurmak
            text: Tıpkı `{repeat}` komutunda olduğu gibi, girinti kullanmayı bırakırsanız satırlar her zaman gösterilecektir., sadece ifade doğru olunca değil.
            editor: <iframe class="fragment" src="/adventure/if_command/8/raw"></iframe>
        8:
            header: eğer ifadeleri içinde eğer ifadeleri
            text: |-
                Bir eğer komutunu bir tekrar komutunun içine ya da başka bir eğer komutunun içine koymayı düşünmüş olabilirsiniz.
                Şimdilik, bu henüz mümkün değildir. Daha yüksek seviyelerde buna izin verilecektir, ancak şimdilik önce `{if}` `{else}` ve `{repeat}` komutlarını uygun girintilerle uygulamaya odaklanalım.
        9:
            header: Hadi maceralara bir göz atalım!
            text: Seviye 8'deki maceraların tadını çıkarın!
    9:
        1:
            header: 9. seviyeye hoş geldiniz
            text: |-
                Bu seviyede, bir `{if}` veya bir `{repeat}` komutundan sonra birden fazla kod satırı kullanabilirsiniz.

                Bir `{repeat}` komutunu başka bir `{repeat}` komutunun içine bile koyabilirsiniz.
        2:
            header: '`{repeat}`dan sonra çoklu satırlar'
            text: Artık `{repeat}` dan sonra birden fazla satır kullanmanıza izin var.
            editor: <iframe class="fragment" src="/adventure/repeat_command/9/raw"></iframe>
        3:
            header: Girinti önemlidir!
            text: Girinti, bilgisayara hangi satırların tekrarlanması gerektiğini ve hangi satırların yalnızca bir kez çalıştırılması gerektiğini söylemek için çok önemlidir.
            editor: <iframe class="fragment" src="/adventure/repeat_command_2/8/raw"></iframe>
        4:
            header: '`{if}` den sonra çoklu satırlar'
            text: '`{if}` den sonra da birden fazla satır kullanabilirsiniz'
            editor: <iframe class="fragment" src="/adventure/if_command/9/raw"></iframe>
        5:
            header: Girinti önemlidir
            text: Tekrarlayalım, girinti hala çok önemlidir ve kodda büyük bir fark yaratabilir.
            editor: <iframe class="fragment" src="/adventure/if_command/9/raw"></iframe>
        6:
            header: Bir `{repeat}` içinde bir `{if}`
            text: |-
                Artık bu komutlardan sonra birden fazla kod satırı kullanabildiğinize göre, bunları birbirinin içine de koyabilirsiniz.
                Şuna bir bakın:
            editor: <iframe class="fragment" src="/adventure/repeat_command/9/raw"></iframe>
        7:
            header: Girintiye dikkat edin
            text: Bu kodun dördüncü ve altıncı satırlarının 8 boşluklu girinti ile başladığına dikkat edin.
            editor: <iframe class="fragment" src="/adventure/repeat_command/9/raw"></iframe>
        8:
            header: Hadi başlayalım!
            text: Seviye 9'daki maceraların tadını çıkarın!
    10:
        1:
            header: 10. seviyeye hoş geldiniz
            text: 'Bu seviyede yeni bir komut öğreneceksiniz: `{for}`.'
        2:
            header: için komutu
            text: '"için" ile bir liste oluşturabilir ve bu listedeki tüm öğeleri kullanabilirsiniz. `{for}`, "tekrar" gibi bir blok oluşturur ve eğer öyleyse bloktaki tüm satırların girinti ile başlaması gerekir (4 boşluk).'
            editor: <iframe class="fragment" src="/adventure/for_command/10/raw"></iframe>
        3:
            header: için komutu
            text: 'Burada `{for}` komutunun başka bir örneğini görüyorsunuz:'
            editor: <iframe class="fragment" src="/adventure/dishes/10/raw"></iframe>
        4:
            header: Programlama zamanı!
            text: Seviye 10'daki maceraların tadını çıkarın!
    11:
        1:
            header: Seviye 11'e hoş geldiniz
            text: |-
                Bu seviyede, `{for}` komutunun yeni bir şeklini ekliyoruz. Daha önceki seviyelerde "için" komutunu bir liste ile kullanmıştık, ancak "için" komutunu sayılarla da kullanabiliriz.

                Bu şekilde artık `{repeat}` komutuna ihtiyaç duymayız.
        2:
            header: için komutu
            text: 'Yeni "için" komutu bu şekilde görünür:'
            editor: <iframe class="fragment" src="/adventure/for_command/11/raw"></iframe>
        3:
            header: i değişkeni
            text: |-
                Önceki slaytta değişkene 'sayaç' ismi verilmişti, çünkü geri sayım yapıyordu.
                Elbette değişken için istediğiniz herhangi bir ismi kullanabilirsiniz.
                Python gibi programlama dillerinde bu durumdaki değişkenler için kullanılan standart isim 'i' dir.
                Şuna benziyor:
            editor: <iframe class="fragment" src="/adventure/calculator/11/raw"></iframe>
        4:
            header: Hadi programlamaya geçelim!
            text: Seviye 11'deki maceraların tadını çıkarın!
    12:
        1:
            header: 12. seviyeye hoş geldiniz
            text: Bu seviyeden itibaren ondalık sayıları kullanmanıza izin var ve tırnak işaretlerinde bazı değişiklikler yapılır.
        2:
            header: Tırnak işaretleri
            text: |-
                Bu seviye tırnak işaretlerinin kullanımında bazı değişiklikler yapar.
                Şu andan itibaren, **tüm metinlerin** tırnak işareti içinde olması gerekmektedir. Buna değişkenlerin değerleri, listelerdeki öğeler ve {if} komutlarından sonraki metinler de dahildir.
            editor: <iframe class="fragment" src="/adventure/quotation_marks/12/raw"></iframe>
        3:
            header: Ondalık sayılar
            text: |-
                Bu seviyeden itibaren ondalık sayıları kullanmanıza da izin verilir. Bu, restoranınız gibi programları daha da iyi hale getirebilir!

                Sayılar tırnak içine alınmaz.
            editor: <iframe class="fragment" src="/adventure/maths/12/raw"></iframe>
        4:
            header: Functions!
            text: |-
                In this level you'll learn how to use functions. A function is a block of code you can easily use multiple times. Using functions helps us organize pieces of code that we can use again and again. To create a function, use define and give the function a name. Then put all the lines you want in the function in a indented block under the define line. Leave one empty line in your code to make it look nice and neat. Great job! You have created a function!

                Now, whenever we need that block of code, we just use call with the function's name to call it up! We don't have to type that block of code again.
        5:
            header: Twinkle Twinkle little star!
            text: |-
                In this program you see an example of a function.
                Let's see what happens if you fill in the rest of the song!
            editor: <iframe class="fragment" src="/adventure/songs_2/12/raw"></iframe>
        6:
            header: Functions
            text: As you could see in the example a function is a block of code that can be called anytime. You use `{define}` to set the function and `{call}` to use it.
        7:
            header: Ready to try it out?
            text: Enjoy the adventures in level 12!
    13:
        1:
            header: 13. seviyeye hoş geldiniz
            text: Şimdi `{and}` ve `{or}` komutlarını öğreneceğiz! İki ifadeyi kontrol etmek istiyorsanız, iki if kullanmak zorunda değilsiniz, ancak "ve" ve "veya" kullanabilirsiniz.
        2:
            header: '"ve" komutu'
            text: |-
                `{and}` komutu her zaman {if} komutu ile birlikte kullanılır.
                Bu şekilde 2 ifadenin doğru olup olmadığını kontrol edebilirsiniz. Örneğin:
            editor: <iframe class="fragment" src="/adventure/and_or_command/13/raw"></iframe>
        3:
            header: '"veya" komutu'
            text: |-
                `{veya}`, {ve}` komutuyla aynı şekilde çalışır, ancak iki ifadeden yalnızca birinin doğru olması gerekir.

                Şimdi `{ve}` yerine `{veya}` yazdığınızda ne olacağını görelim.
            editor: <iframe class="fragment" src="/adventure/and_or_command/13/raw"></iframe>
        4:
            header: Functions with arguments
            text: Now that you've learned how to use functions, you'll learn how to use a function with an **argument**. An argument is a variable that is used within a function. It is not used outside the function.
        5:
            header: Example
            text: |-
                In this example you see how the argument 'place' is used in the function.
                Run the code and change 'ocean' and 'sea' to something else, and see what happens.
            editor: <iframe class="fragment" src="/adventure/functions/13/raw"></iframe>
        6:
            header: Example with variable
            text: |-
                Now you've ssen how arguments work, you could also combine function with a question.

                What happens if you make these changes:
                ```
                define song with place
                    print 'My Bonnie is ' place

                answer is ask 'Where is my Bonnie?'
                call song with answer
                ```
            editor: <iframe class="fragment" src="/adventure/functions/13/raw"></iframe>
        7:
            header: Even more questions!
            text: |-
                Now we have combined even more question with the function. Type this code and see what happens.

                Note how the variables and the arguments have the same name. This is allowed.
                Does it confuse you? Just use different names, that is allowed as well.
                ```
                define song with name, place
                    print 'My ' name ' is ' place

                name is ask 'Who?'
                place is ask 'Where are they?'
                call song with name, place
                ```
            editor: <iframe class="fragment" src="/adventure/functions/13/raw"></iframe>
        8:
            header: Let's go!
            text: Enjoy the adventures in level 13!
    14:
        1:
            header: 14. seviyeye hoş geldiniz
            text: Bu seviyede, programlarınızı geliştirmenize yardımcı olabilecek ">" gibi bazı yeni semboller öğreneceksiniz.
        2:
            header: Semboller
            text: |-
                Bunlar kullanabileceğiniz yeni sembollerdir:

                  > büyüktür anlamına gelir...

                  >= büyük veya eşittir anlamına gelir...

                  < küçüktür anlamına gelir...

                  <= küçük veya eşittir anlamına gelir...

                Bunları şu şekilde kullanabilirsiniz:
            editor: <iframe class="fragment" src="/adventure/is_command/14/raw"></iframe>
        3:
            header: Semboller
            text: |-
                Ayrıca şunları da kullanabilirsiniz:

                == benzer/eşit.

                != benzer/eşit değil

                == `{if}` ifadelerinde kullanılır.
            editor: <iframe class="fragment" src="/adventure/default/14/raw"></iframe>
        4:
            header: Return value
            text: In the previous levels you have learned to create functions and use arguments with them. Another great use of a function is to let it calculate something for you. You can give the function a calculation and it will give you the answer of the calculation. This answer is called a **return
                value**.
        5:
            header: Return value
            text: For example, in this code the function calculate_new_price will calculate the new price of any item. It will give you the new price as a return value.
            editor: <iframe class="fragment" src="/adventure/functions/14/raw"></iframe>
        6:
            header: Let's get to work!
            text: Enjoy the adventures in level 14!
    15:
        1:
            header: Seviye 15'e hoş geldiniz
            text: Bu seviyede `{while}` döngüsü hakkında bilgi edineceksiniz.
        2:
            header: '{while}'
            text: |-
                Yeni bir döngü öğreneceğiz, "iken" döngüsü! Döngü, ifade doğru olduğu sürece devam eder. Bu yüzden döngü içinde bu değeri değiştirmeyi unutmayın.

                Bu örnek kodda, doğru bir cevap verilene kadar devam ediyoruz. Doğru cevap hiç verilmezse, döngü asla sona ermeyecektir!
            editor: <iframe class="fragment" src="/adventure/while_command/15/raw"></iframe>
        3:
            header: Hadi deneyelim!
            text: Seviye 15'teki maceraların tadını çıkarın!
    16:
        1:
            header: 16. seviyeye hoş geldiniz
            text: Bu seviyede [köşeli parantezler] hakkında bilgi edinecek ve bunları nasıl kullanacağınızı öğreneceksiniz.
        2:
            header: Köşeli parantezler
            text: Python yöntemiyle listeler yapacağız, ve bu listelerin etrafında köşeli parantezler olacak! Ayrıca önceki seviyelerde öğrendiğimiz gibi her öğenin etrafında tırnak işaretlerini tutuyoruz. Köşeli parantezleri listedeki bir yeri belirtmek için kullanıyoruz. "rastgele" komutu artık kullanılamaz.
            editor: <iframe class="fragment" src="/adventure/random_command/16/raw"></iframe>
        3:
            header: Hadi deneyelim!
            text: Seviye 16'daki maceraların tadını çıkarın!
    17:
        1:
            header: Seviye 17'ye hoş geldiniz
            text: Bu seviyede iki nokta üst üste işaretinin nasıl kullanılacağını ve "değileğer" komutunu öğreneceksiniz.
        2:
            header: İki nokta üstüste
            text: Şimdi girintilemeyi biraz değiştireceğiz. Girintiye ihtiyaç duyduğumuz her seferinde, girintiden önceki satırda ":" işaretine ihtiyacımız var.
            editor: <iframe class="fragment" src="/adventure/print_command/17/raw"></iframe>
        3:
            header: değileğer
            text: 'Bu seviyede yeni bir komutu da kullanabilirsiniz: değileğer. değileğer, "değilse eğer" ''in kısaltmasıdır ve 3 (veya daha fazla!) seçenek yapmak istediğinizde buna ihtiyacınız vardır. Şuna bir göz atın!'
            editor: <iframe class="fragment" src="/adventure/elif_command/17/raw"></iframe>
        4:
            header: Hadi deneyelim!
            text: Seviye 17'deki maceraların tadını çıkarın!
    18:
        1:
            header: 18. seviyeye hoş geldiniz
            text: Tebrikler! Hedy'nin son seviyesine ulaştınız! Burada oluşturduğunuz kodu replit veya PyCharm gibi gerçek Python ortamlarına kopyalayabilir ve orada öğrenmeye devam edebilirsiniz! Ancak Python'un yalnızca İngilizce komutları okuyabildiğini unutmayın, bu nedenle başka diller kullanıyorsanız,
                şimdi İngilizce'ye geçmeniz gerekecektir.
        2:
            header: Python yolu
            text: |-
                Gerçek Python koduna ulaştık! Bu, bundan sonra yazdır ve aralık ile parantez kullanmamız gerektiği anlamına geliyor.

                Ayrıca, birden fazla öğe yazdırmak istiyorsanız, bunları virgülle ayırmanız gerekir.

                Python kodunu elde etmek için yapmamız gereken son değişiklik "sor" komutunu "girdi" komutu ile değiştirmek.

                Tüm örnekler için 'yazdır' sekmesine tıklayın.
            editor: <iframe class="fragment" src="/hedy/18"></iframe>
        3:
            header: En son maceralar!
            text: Seviye 18'de en son maceraların tadını çıkarın!
